{"ast":null,"code":"var _jsxFileName = \"/home/kelvenrubalaine/Documents/projects/react-tutorial/src/App.js\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport Person from \"./Person/Person\";\nimport ErrorBoundary from \"./ErrorBoundary/ErrorBoundary\";\nconst StyledButton = styled.button`\n  background-color: ${props => props.alt ? \"red\" : \"green\"};\n  font: inherit;\n  border: 1px solid blue;\n  padding: 8px;\n  cursor: pointer;\n  &:hover {\n    background-color: ${props => props.alt ? \"salmon\" : \"orange\"};\n\n    color: black;\n  }\n`;\n_c = StyledButton;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: \"asfa1\",\n        name: \"Max\",\n        age: 28\n      }, {\n        id: \"vasdf1\",\n        name: \"Manu\",\n        age: 29\n      }, {\n        id: \"asdf11\",\n        name: \"Stephanie\",\n        age: 26\n      }],\n      otherState: \"some other value\",\n      showPersons: false\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      });\n      const person = { ...this.state.persons[personIndex]\n      }; // const person = Object.assign({}, this.state.persons[personIndex]);\n\n      person.name = event.target.value;\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.deletePersonHandler = personIndex => {\n      // const persons = this.state.persons.slice();\n      const persons = [...this.state.persons];\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n  }\n\n  render() {\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, this.state.persons.map((person, index) => {\n        return /*#__PURE__*/React.createElement(ErrorBoundary, {\n          key: person.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Person, {\n          click: () => this.deletePersonHandler(index),\n          name: person.name,\n          age: person.age,\n          key: person.id,\n          changed: event => this.nameChangedHandler(event, person.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }\n        }));\n      }));\n    }\n\n    let classes = [];\n\n    if (this.state.persons.length <= 2) {\n      classes.push(\"red\");\n    }\n\n    if (this.state.persons.length <= 1) {\n      classes.push(\"bold\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, \"Hi, I'm a React App\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.join(\" \"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \"This is really working!\"), /*#__PURE__*/React.createElement(StyledButton, {\n      alt: this.state.showPersons,\n      onClick: this.togglePersonsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, \"Toggle Persons\"), persons); // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"StyledButton\");","map":{"version":3,"sources":["/home/kelvenrubalaine/Documents/projects/react-tutorial/src/App.js"],"names":["React","Component","styled","Person","ErrorBoundary","StyledButton","button","props","alt","App","state","persons","id","name","age","otherState","showPersons","nameChangedHandler","event","personIndex","findIndex","p","person","target","value","setState","deletePersonHandler","splice","togglePersonsHandler","doesShow","render","map","index","classes","length","push","join"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport Person from \"./Person/Person\";\nimport ErrorBoundary from \"./ErrorBoundary/ErrorBoundary\";\n\nconst StyledButton = styled.button`\n  background-color: ${(props) => (props.alt ? \"red\" : \"green\")};\n  font: inherit;\n  border: 1px solid blue;\n  padding: 8px;\n  cursor: pointer;\n  &:hover {\n    background-color: ${(props) => (props.alt ? \"salmon\" : \"orange\")};\n\n    color: black;\n  }\n`;\nclass App extends Component {\n  state = {\n    persons: [\n      { id: \"asfa1\", name: \"Max\", age: 28 },\n      { id: \"vasdf1\", name: \"Manu\", age: 29 },\n      { id: \"asdf11\", name: \"Stephanie\", age: 26 },\n    ],\n    otherState: \"some other value\",\n    showPersons: false,\n  };\n\n  nameChangedHandler = (event, id) => {\n    const personIndex = this.state.persons.findIndex((p) => {\n      return p.id === id;\n    });\n\n    const person = {\n      ...this.state.persons[personIndex],\n    };\n\n    // const person = Object.assign({}, this.state.persons[personIndex]);\n\n    person.name = event.target.value;\n\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n\n    this.setState({ persons: persons });\n  };\n\n  deletePersonHandler = (personIndex) => {\n    // const persons = this.state.persons.slice();\n    const persons = [...this.state.persons];\n    persons.splice(personIndex, 1);\n    this.setState({ persons: persons });\n  };\n\n  togglePersonsHandler = () => {\n    const doesShow = this.state.showPersons;\n    this.setState({ showPersons: !doesShow });\n  };\n\n  render() {\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = (\n        <div>\n          {this.state.persons.map((person, index) => {\n            return (\n              <ErrorBoundary key={person.id}>\n                <Person\n                  click={() => this.deletePersonHandler(index)}\n                  name={person.name}\n                  age={person.age}\n                  key={person.id}\n                  changed={(event) => this.nameChangedHandler(event, person.id)}\n                />\n              </ErrorBoundary>\n            );\n          })}\n        </div>\n      );\n    }\n    let classes = [];\n    if (this.state.persons.length <= 2) {\n      classes.push(\"red\");\n    }\n    if (this.state.persons.length <= 1) {\n      classes.push(\"bold\");\n    }\n    return (\n      <div className=\"App\">\n        <h1>Hi, I'm a React App</h1>\n        <p className={classes.join(\" \")}>This is really working!</p>\n        <StyledButton\n          alt={this.state.showPersons}\n          onClick={this.togglePersonsHandler}\n        >\n          Toggle Persons\n        </StyledButton>\n        {persons}\n      </div>\n    );\n    // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}